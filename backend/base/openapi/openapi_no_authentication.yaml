openapi: 3.0.3
info:
  contact:
    name: Impulse
  description: OpenAPI definition file for impulse-apps
  title: apps-training RESTful API
  version: 0.0.1
servers:
- url: /impulse-apps-training
tags:
- name: root
- description: API on employee
  name: employee
paths:
  /:
    get:
      description: Test server health
      operationId: ping
      responses:
        "200":
          content:
            application/json:
              examples:
                res:
                  value:
                    appStatusCode: 200
                    description: Success
              schema:
                $ref: '#/components/schemas/BasicResponse'
          description: OK
      security: []
      tags:
      - root
      x-openapi-router-controller: base.controllers.root_controller
  /employees:
    get:
      description: get all employees
      operationId: get_employees
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employees'
          description: OK
        default:
          description: Unexpected Error
      tags:
      - employee
      x-openapi-router-controller: implemented.controllers.employee_controller
    post:
      description: create a new employee
      operationId: post_employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePostRequestBody'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: CREATED
        default:
          description: Unexpected Error
      tags:
      - employee
      x-openapi-router-controller: implemented.controllers.employee_controller
  /employees/{employeeId}:
    delete:
      description: Delete a list of action recommendation by targetType and targetId
      operationId: delete_employee
      parameters:
      - explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: OK
        default:
          description: Unexpected error
      tags:
      - employee
      x-openapi-router-controller: implemented.controllers.employee_controller
    get:
      description: Get a list of action recommendation by targetType and targetId
      operationId: get_employee
      parameters:
      - explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: OK
        default:
          description: Unexpected error
      tags:
      - employee
      x-openapi-router-controller: implemented.controllers.employee_controller
    put:
      description: update description for an employee
      operationId: put_employee
      parameters:
      - explode: false
        in: path
        name: employeeId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePutRequestBody'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: OK
        default:
          description: Unexpected Error
      tags:
      - employee
      x-openapi-router-controller: implemented.controllers.employee_controller
components:
  schemas:
    EmployeePostRequestBody:
      description: Post request body to create a new employee
      example:
        name: name
        description: description
      properties:
        name:
          type: string
        description:
          type: string
      type: object
    EmployeePutRequestBody:
      description: Put request body to update an employee
      example:
        description: description
      properties:
        description:
          type: string
      type: object
    Employee:
      description: Basic response with application status code
      example:
        name: name
        description: description
        employeeId: employeeId
      properties:
        employeeId:
          type: string
        name:
          type: string
        description:
          type: string
      type: object
    Employees:
      description: list of employee
      items:
        $ref: '#/components/schemas/Employee'
      type: array
    BasicResponse:
      description: Basic response with application status code
      example:
        description: description
        appStatusCode: 0
      properties:
        appStatusCode:
          type: integer
        description:
          type: string
      required:
      - appStatusCode
      - description
      type: object

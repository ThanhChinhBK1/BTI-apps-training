# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from base.models.base_model_ import Model
from base import util


class BasicResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_status_code=None, description=None):  # noqa: E501
        """BasicResponse - a model defined in OpenAPI

        :param app_status_code: The app_status_code of this BasicResponse.  # noqa: E501
        :type app_status_code: int
        :param description: The description of this BasicResponse.  # noqa: E501
        :type description: str
        """
        self.openapi_types = {
            'app_status_code': int,
            'description': str
        }

        self.attribute_map = {
            'app_status_code': 'appStatusCode',
            'description': 'description'
        }

        self._app_status_code = app_status_code
        self._description = description

    @classmethod
    def from_dict(cls, dikt) -> 'BasicResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BasicResponse of this BasicResponse.  # noqa: E501
        :rtype: BasicResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_status_code(self):
        """Gets the app_status_code of this BasicResponse.


        :return: The app_status_code of this BasicResponse.
        :rtype: int
        """
        return self._app_status_code

    @app_status_code.setter
    def app_status_code(self, app_status_code):
        """Sets the app_status_code of this BasicResponse.


        :param app_status_code: The app_status_code of this BasicResponse.
        :type app_status_code: int
        """
        if app_status_code is None:
            raise ValueError("Invalid value for `app_status_code`, must not be `None`")  # noqa: E501

        self._app_status_code = app_status_code

    @property
    def description(self):
        """Gets the description of this BasicResponse.


        :return: The description of this BasicResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this BasicResponse.


        :param description: The description of this BasicResponse.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")  # noqa: E501

        self._description = description

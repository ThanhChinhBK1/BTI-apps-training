# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from base.models.base_model_ import Model
from base import util


class EmployeePostRequestBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, department=None, team=None, mail=None):  # noqa: E501
        """EmployeePostRequestBody - a model defined in OpenAPI

        :param name: The name of this EmployeePostRequestBody.  # noqa: E501
        :type name: str
        :param department: The department of this EmployeePostRequestBody.  # noqa: E501
        :type department: str
        :param team: The team of this EmployeePostRequestBody.  # noqa: E501
        :type team: str
        :param mail: The mail of this EmployeePostRequestBody.  # noqa: E501
        :type mail: str
        """
        self.openapi_types = {
            'name': str,
            'department': str,
            'team': str,
            'mail': str
        }

        self.attribute_map = {
            'name': 'name',
            'department': 'department',
            'team': 'team',
            'mail': 'mail'
        }

        self._name = name
        self._department = department
        self._team = team
        self._mail = mail

    @classmethod
    def from_dict(cls, dikt) -> 'EmployeePostRequestBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EmployeePostRequestBody of this EmployeePostRequestBody.  # noqa: E501
        :rtype: EmployeePostRequestBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this EmployeePostRequestBody.


        :return: The name of this EmployeePostRequestBody.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EmployeePostRequestBody.


        :param name: The name of this EmployeePostRequestBody.
        :type name: str
        """

        self._name = name

    @property
    def department(self):
        """Gets the department of this EmployeePostRequestBody.


        :return: The department of this EmployeePostRequestBody.
        :rtype: str
        """
        return self._department

    @department.setter
    def department(self, department):
        """Sets the department of this EmployeePostRequestBody.


        :param department: The department of this EmployeePostRequestBody.
        :type department: str
        """

        self._department = department

    @property
    def team(self):
        """Gets the team of this EmployeePostRequestBody.


        :return: The team of this EmployeePostRequestBody.
        :rtype: str
        """
        return self._team

    @team.setter
    def team(self, team):
        """Sets the team of this EmployeePostRequestBody.


        :param team: The team of this EmployeePostRequestBody.
        :type team: str
        """

        self._team = team

    @property
    def mail(self):
        """Gets the mail of this EmployeePostRequestBody.


        :return: The mail of this EmployeePostRequestBody.
        :rtype: str
        """
        return self._mail

    @mail.setter
    def mail(self, mail):
        """Sets the mail of this EmployeePostRequestBody.


        :param mail: The mail of this EmployeePostRequestBody.
        :type mail: str
        """

        self._mail = mail

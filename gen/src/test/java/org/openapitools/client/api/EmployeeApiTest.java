/*
 * apps-training RESTful API
 * OpenAPI definition file for impulse-apps
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Employee;
import org.openapitools.client.model.EmployeePostRequestBody;
import org.openapitools.client.model.EmployeePutRequestBody;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EmployeeApi
 */
@Ignore
public class EmployeeApiTest {

    private final EmployeeApi api = new EmployeeApi();

    
    /**
     * 
     *
     * Delete a list of action recommendation by targetType and targetId
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteEmployeeTest() throws ApiException {
        String name = null;
        Employee response = api.deleteEmployee(name);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get a list of action recommendation by targetType and targetId
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEmployeeTest() throws ApiException {
        String name = null;
        Employee response = api.getEmployee(name);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get an employee with &#39;omitted&#x3D;false&#39; at random
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEmployeeAtRandomTest() throws ApiException {
        Boolean omitted = null;
        Boolean random = null;
        Integer size = null;
        Employee response = api.getEmployeeAtRandom(omitted, random, size);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get all employees
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEmployeesTest() throws ApiException {
        Boolean participate = null;
        Boolean omitted = null;
        List<Employee> response = api.getEmployees(participate, omitted);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get employees with &#39;participate&#x3D;true&#39;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getParticipantsTest() throws ApiException {
        Boolean participate = null;
        Employee response = api.getParticipants(participate);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a new employee
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postEmployeesTest() throws ApiException {
        EmployeePostRequestBody employeePostRequestBody = null;
        Employee response = api.postEmployees(employeePostRequestBody);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * update omittetd and participate for the employee
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putEmployeeByNameTest() throws ApiException {
        String name = null;
        EmployeePutRequestBody employeePutRequestBody = null;
        Employee response = api.putEmployeeByName(name, employeePutRequestBody);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * update the omitted value of the employees in a certain team
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putEmployeesByTeamTest() throws ApiException {
        String teamId = null;
        List<Employee> response = api.putEmployeesByTeam(teamId);

        // TODO: test validations
    }
    
}
